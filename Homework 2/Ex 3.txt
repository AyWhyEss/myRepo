#include <stdio.h>
#include <string.h>

// Reverse a string in place using two-pointer technique
void reverse(char *s) {
    // Check for NULL pointer to be protected 
    if (!s)
        return;
    
    // Determine the length
    int len = strlen(s);
    if (len == 0) // If the string is empty, there's nothing to reverse.
        return;
    
    // Set up two pointers: one at the start and one at the end.
    char *p = s, *q = s + len - 1;
    // Swap the characters until the two pointers meet or cross
    while (p < q) {
        char t = *p;  // Save
        *p = *q;      // Move
        *q = t;       // Place the saved character at the end
        p++;          // Move the start pointer forward 
        q--;          // Move the end pointer back
    }
}

int main(void) {
    // Create a buffer
    char s[100];
    fgets(s, sizeof(s), stdin);
    
    // Remove the new line
    s[strcspn(s, "\n")] = 0;
    
    reverse(s);
    
    // Output
    printf("%s", s);
    
    return 0;
}
